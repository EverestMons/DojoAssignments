<!DOCTYPE html>
<html lang=en>
  <head>
    <title>Javascript Basics</title>
    <meta charset="UTF-8">
    <meta name="discription" content="discription">
      <link rel="stylesheet" type="text/css" href="javascriptstyle.css">
  </head>
  <body class="wrapper">
    <h2 class="title">JavaScript Basics</h2>
    <div class="sidebar">
      Home
        <ul class="group1">
          <li>JavaScript Overview</li>
        <ul>
          <li>Variable Declaration</li>
          <li>Data Type</li>
          <li>Conditionals</li>
          <li>Loops</li>
          <li>Function</li>
        </ul>
        <li>Projects</li>
        <li>Assignments</li>
        <li>Quiz</li>
      </ul>
    </div>
      <div class="main_text">
      <h3 class="body_title">JavaScript Basics</h3><br>
        JavaScript is a cross-platform, object-oriented scripting language. JavaScript is extremely popular for a variety of reasons. It is a small and lightweight language allowing maximum flexibility for developers to take it in a bunch of different directions. JavaScript lives inside a host environment (a web browser or Node server), it can be connected tp the objects of these environments to provide programmatic control over them.
          <ul class="text">
            <li> <a href="https://google.com">Variable Declaration</a> Javascript variables are the containers for storing data values- imagine a cup you fill with coffee, the cup holds the coffee, a variable holds a value. All JavaScript variables must be identified with unuque names. These unique names are called identifiers.<span style="color:purple"> var x;</span> </li>
            <li> <a href="https://google.com">Variable Assignment</a> Assignment operators assign values to JavaScript variables- our cup can now have coffee poured in it, giving our vaiable a value to hold. The = assignment operator assigns a value to a variable.<span style="color:purple"> var x = 10;</span> </li>
            <li> <a href="https://google.com">Data Types</a> Data types are an important concept; to be able to operate on variables you need to know the data type. There are six data types that are JavaScript primitives: Boolean- <span style="color:purple">true</span> or <span style="color:purple">false;</span> - <span style="color:purple">null</span> aka nothing; Number - <span style="color:purple">42</span> or <span style="color:purple">3.14159;</span> String - <span style="color:purple">"Coding Dojo Rocks!;"</span> Array - <span style="color:purple">[1, 'Coding', 2, 'Dojo'];</span> and Object - <span style="color:purple">{first_name:'Jane', last_name: 'Doe'}</span></li>
            <li> <a href="https://google.com">Conditionals</a> When you write code, you want to perform different actions for different decisions- hitting different code blocks based on values or conditions that have been met. You can use conditional statements in your code to accomplish this. There are the following conditional statements:<span style="color:purple"> if </span> a specified condition os true, do this code in our code block;<span style="color:purple"> else if </span> to specify a new condition to test, if the first condition is false; <span style="color:purple"> else </span> we execute this block of code;</li>
            <li> <a href="https://google.com">Loops</a> There are many different kinds of loops in every programming language, but they all essentially do the sname thing: they will repeat an action some number of times. Imagine you have to run a mile, well you run around the track four times and then you stop. That's a loop!</li>
            <li> <a href="https://google.com">Function</a> Functions are an encaspulation of a code block. When we call our function this will run that code block. Think of it as a list of instructions. As an example imagine we are putting together a desk from Ikea, we open up the instruction manual and get started, first we screw the legs to the table top; next we place the table the right way up. Done! We finished our instructions. Sadly there are a ton more tables to do so lets call our fuction over and over and over again. </li>
          </ul>
        </div>
      <div class="footer">
        <p> For more useful information check out this URL:<a href="https://google.com">JavaScript</a> </p>
      </div>
  </body>
</html>
